@use "../css/themes.css";
@use "abstracts/vars" as *;
@import url(../fonts/nunito/nunito.css);

*,
*::before,
*::after {
    font-family: $font-family;
    box-sizing: border-box;
    border: none;
}

html {
    scroll-behavior: smooth;
    scroll-padding-top: 50px;
}

body {
    display: flex;
    flex-direction: column;
    min-height: 100vh;

    background: var(--bg-color);
    background: var(--bg-gradient);
    background-size: 300% 300%;
    backdrop-filter: blur(2000px);

    margin: 0;
    padding: 0;
    font-size: 1.125rem;
    color: var(--text-color);

    overflow: auto;
    animation: gradientAnimation 50s ease infinite;
}

// **********************************
// *           Animations           *
// **********************************

@keyframes gradientAnimation {
    0% {
        background-position: 0% 50%;
    }

    50% {
        background-position: 100% 50%;
    }

    100% {
        background-position: 0% 50%;
    }
}

/* *************************************** */
/* *           Utility styling           * */
/* *************************************** */

button,
a {
    display: inline-flex;
    position: relative;
    color: var(--text-color);
}

button {
    background: none;
    border: none;
    cursor: pointer;
}

a {
    text-decoration: underline;
}

/* Styling underline for all buttons and <a> elements inside main part of document */
.custom-underline {
    @mixin underlineAfter {
        content: "";
        position: absolute;
        bottom: -0.0001em;

        width: 100%;
        height: 0.1em;

        background: var(--accent-color);
        border-radius: var(--border-radius);

        transition: scale 200ms ease-in;
        scale: 1;
    }

    a:not(.underline) {
        text-decoration: none;

        &:after {
            @include underlineAfter;
        }
    }

    button {
        &::after,
        &:hover::after {
            @include underlineAfter;
        }

        &::after {
            scale: 0 1;
        }
    }
}

.round {
    border-radius: 50%;
    aspect-ratio: 1 / 1;
}

svg {
    fill: currentColor;
}

hr {
    width: 98%;
    height: 3px;
    background: var(--separator-color);
    border-radius: var(--border-radius);
}

.underline {
    text-decoration: underline;
}

.flex {
    display: flex;
}

.hidden {
    display: none;
}

/* heading classes */
.heading {
    margin: 0.3em 0 0.8em;
    font-size: 2.15rem;
    font-weight: 700;
}

.subheading {
    margin: 1.2em 0 0.4em;
    font-size: 1.75rem;
    font-weight: 600;
}

/* Font weights */
.fw-100 {
    font-weight: 100;
}

.fw-200 {
    font-weight: 200;
}

.fw-300 {
    font-weight: 300;
}

.fw-400 {
    font-weight: 400;
}

.fw-500 {
    font-weight: 500;
}

.fw-600 {
    font-weight: 600;
}

.fw-700 {
    font-weight: 700;
}

.fw-800 {
    font-weight: 800;
}

.fw-900 {
    font-weight: 900;
}

// Icon sizes
.icon-redirect,
.icon-edit {
    height: 0.8em;
    align-self: flex-start;
}

/* ********************************************** */
/* *        Styling Main content of page        * */
/* ********************************************** */

main {
    flex: 1;
    padding: 1.5em 5em calc(1.5em * 2);
    transition: padding 400ms ease-in;
    overflow: auto;

    @media (width <= 950px) {
        padding-left: 3em;
        padding-right: 3em;
    }

    @media (width <= 800px) {
        padding-left: 2em;
        padding-right: 2em;
    }

    @media (width <= 500px) {
        padding-left: 0.5em;
        padding-right: 0.5em;
    }
}

article:not(:last-child)::after {
    content: "";
    display: block;

    width: 98%;
    height: 3px;

    margin: 2.5em auto;

    border-radius: var(--border-radius);
    background: var(--separator-color);
}

.flex-container {
    display: flex;
    flex-direction: row;
    align-items: center;
    flex-wrap: wrap;
}
